# The name of the workflow.
name: Build and Deploy

# Run the workflow when code is pushed to the main branch
on:
  push:
    branches:
      - main

# Set environment variables
env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  PORT: ${{ secrets.PORT }}
 

# This is the workflow that is being run.
jobs:
  build-and-deploy:
    # This is telling GitHub to run the workflow on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies and run tests ? for the client application
      - name: Install and Test Client
        working-directory: ./frontend
        run: |
          npm install
        
      # Install dependencies, export environment variables to be used by application and run tests ? for the server application
      - name: Install and Test Server
        working-directory: ./backend
        run: |
          npm install
          export MONGODB_URI=$MONGODB_URI
          export EMAIL_PASS=$EMAIL_PASS
          export EMAIL_USER=$EMAIL_USER
          export PORT=$PORT
          # npm run test
      # Build a Docker image for the client application
      - name: Build Client Docker Image
        working-directory: ./frontend
        # Build image with tag rakeshpotnuru/productivity-app:client
        run: |
          docker build -t avrilm/capstone:frontend-${{github.run_number}} -t avrilm/capstone:frontend-latest .
      # Build a Docker image for the server application
      - name: Build Server Docker Image
        working-directory:
          ./backend
          # Build image with tag rakeshpotnuru/productivity-app:server
        run: |
          docker build -t avrilm/capstone:backend-${{github.run_number}} -t avrilm/capstone:backend-latest .
      # Build a Docker image for the NGINX reverse proxy
      - name: Build NGINX Docker Image
        working-directory: ./nginx
        # Build image with tag rakeshpotnuru/productivity-app:nginx
        run: |
          docker build -t avrilm/capstone:nginx-${{github.run_number}} -t avrilm/capstone:nginx-latest .
      # Log in to Docker Hub using credentials from repository secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker images to Docker Hub
      - name: Push Docker Images to Docker Hub
        run: |
          docker push avrilm/capstone:frontend-${{github.run_number}}
          docker push avrilm/capstone:backend-${{github.run_number}}
          docker push avrilm/capstone:nginx-${{github.run_number}}
          docker push avrilm/capstone:frontend-latest
          docker push avrilm/capstone:backend-latest
          docker push avrilm/capstone:nginx-latest
      # This is the step that is deploying the application to Elastic Beanstalk.
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APP_NAME }}
          environment_name: ${{ secrets.EB_ENV_NAME }}
          region: ${{ secrets.EB_REGION }}
          version_label: "version-${{ github.run_number }}"
          deployment_package: docker-compose.yml